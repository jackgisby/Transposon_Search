getGenomeMatches <- function(subSeq, Genome, mismatch = 0, with.indels = TRUE, fixed = TRUE) {
  # takes genome, searchstring and matchPattern parameters for entire genome searching of a sequence
  # returns either "No matches found." or a list of two dataframes (one for the forward matches, one for the reverse)
  
  forwardMatches <- data.frame(matrix(ncol = 3, nrow = 0))
  reverseMatches <- data.frame(matrix(ncol = 3, nrow = 0))
  colnames(forwardMatches) <- c("Chr", "Start", "End")
  
  for(i in 1:length(Genome)) { 
    Matches <- (getMatchesChr(SearchString, Chr, chrList[i], max.mismatch = max.mismatch, with.indels = with.indels, fixed = fixed))
    if(!is.null(Matches[[1]])) {
      forwardMatches <- rbind(forwardMatches, Matches[[1]])
    }
    
    if(!is.null(Matches[[2]])) {
      reverseMatches <- rbind(reverseMatches, Matches[[2]])
    }
  }
  
  if(length(forwardMatches[[1]]) == 0 & length(reverseMatches[[1]]) == 0) {
    return("No matches found.")
  }
  
  forwardMatches$End <- forwardMatches$Start + forwardMatches$End
  reverseMatches$End <- reverseMatches$Start + reverseMatches$End
  
  return(list("forwardMatches" = forwardMatches, "reverseMatches" = reverseMatches))
}

getSeqMatches <- function(SubSeqForward, Chr, chrName = NULL, max.mismatch = 0, with.indels = FALSE, fixed = TRUE){
  # takes subsequence and DNAString object to be searched with parameters for matchPattern string search
  # returns matches in the chromosome for the forward and reverse complement matches as a list of dataframes (or NULL in the event of no matches)

  if(is.null(chrName)) {
    chrName <- "Chr"
  }
  
  SubSeqReverse <- reverse(SubSeqForward)
  
  print(paste("Searching forward strand of", chrName))
  forwardMatches <- matchPattern(SubSeqForward, Chr, max.mismatch = max.mismatch, with.indels = with.indels, fixed = fixed) #gregexpr wrapper
  print(paste("Searching reverse strand", chrName))
  reverseMatches <- matchPattern(SubSeqReverse, Chr, max.mismatch = max.mismatch, with.indels = with.indels, fixed = fixed)
  
  if(length(forwardMatches@ranges@start) == 0) {
    forwardData <- NULL
    
  } else {
    forwardData <- data.frame("Chr" = paste(chrName, "F", sep=""), 
                             "Start" = forwardMatches@ranges@start,
                              "End" = forwardMatches@ranges@width)
  }
  
  if(length(reverseMatches@ranges@start) == 0) {
    reverseData <- NULL
    
  } else {
    reverseData <- data.frame("Chr" = paste(chrName, "R", sep=""), 
                              "Start" = reverseMatches@ranges@start,
                              "End" = reverseMatches@ranges@width)
  }
  
  print(paste(chrName, "search complete"))
  return(list(forwardData, reverseData))
}