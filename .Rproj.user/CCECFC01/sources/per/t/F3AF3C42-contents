library(Biostrings)

source("R/Visualise_Chromomap.R")
source("R/Search_Biostrings.R")



Search_Visualise <- function(SearchString, Genome, max.mismatch = 0, with.indels = FALSE, fixed = TRUE) {
# ---input---
# SearchString = DNAString object to be searched for
# Genome = BSgenome object to search
# searchChr = chromosomes to search (list of strings)
# max.mismatch = the maximum edit distance to be considered
# with.indels = whether or not to consider indels as a mismatch
# fixed = allows the use of IUPAC symbols
#   
# ---returns---
# saves chromomap to "Plots" folder
# saves locations of matches to intermediate data folder
# a summary of the search
  
  chrList = seqnames(Genome)
  forwardMatches <- data.frame(matrix(ncol = 3, nrow = 0))
  reverseMatches <- data.frame(matrix(ncol = 3, nrow = 0))
  colnames(forwardMatches) <- c("Chr", "Start", "End")
  colnames(reverseMatches) <- c("Chr", "Start", "End")
  
  for(i in 1:length(chrList)) { #export this to seperate function?
    Chr <- ArAth[[chrList[i]]]
    Matches <- (getMatches(SearchString, Chr, chrList[i], max.mismatch = max.mismatch, with.indels = with.indels, fixed = fixed))
    if(!is.null(Matches[[1]])) {
      forwardMatches <- rbind(forwardMatches, Matches[[1]])
    }
    
    if(!is.null(Matches[[2]])) {
      reverseMatches <- rbind(reverseMatches, Matches[[2]])
    }
  }
  
  if(length(forwardMatches) == 0 & length(reverseMatches) == 0) {
    return("No matches found.")
  }
  
  forwardMatches$End <- forwardMatches$Start + forwardMatches$End
  reverseMatches$End <- reverseMatches$Start + reverseMatches$End

  return(Visualise(Genome, forwardMatches, reverseMatches, chrList))
}