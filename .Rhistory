initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
x
matchPattern("CACTACAA", Genome[[1]], max.mismatch = 1, with,indels = TRUE)
matchPattern("CACTACAA", Genome[[1]], max.mismatch = 1, with.indels = TRUE)
Genome[[1]]
Genome[[1]][5]
"ABC"[1]
"ABC"[[1]]
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
x
Genome <- Genome[1:5]
Genome
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
x
113183
113183/10
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
x
Genome$`NC_003070.9 Arabidopsis thaliana chromosome 1 sequence`
y = c(1, 2)
y
y[1]
y[2]
x
x[1]
x[1,]
x = Granges(seqnames = names(Genome))
library(GenomicRanges)
x = GRanges(seqnames = names(Genome))
genome(gr)
y = matchPattern("CACTACAA", Genome[[1]], max.mismatch = 1, with.indels = TRUE)
y
GRanges(y)
?Views
as(y, "IRanges")
GRanges(y)
y
GRanges(seqnames = "Chr1", ranges = as(y, "IRanges"))
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
x
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
x
x[1]
x@ranges
x
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
x
x = GRanges()
x
View(Genome)
View(Genome)
Genome
Genome$width
Genome[[1]]
Genome@ranges
Genome@ranges$width
genome@ranges@width
Genome@ranges@width
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
x
x@seqnames
genome(x)
genome(x) <- "Ar"
genome(x)
x
seqlengths(x)
seqlengths(x) = Genome@ranges@width
x
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
summarizedOverlaps(x)
summarizeOverlaps(x)
distanceToNearest(x)
follow(1, x)
x[1]
x
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
x
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
x <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
x
x
x[1]
follow(x[1], x)
follow(x[5], x)
x[4]
x[5]
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
TIR_Matches <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
potTransposons <- TIR_Matches[strand(TIR_Matches) == "+"]
reverseMatchess <- TIR_Matches[strand(TIR_Matches) == "-"]
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
TIR_Matches <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
TIR_Matches <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
TIR_Matches <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
potTransposons <- TIR_Matches[strand(TIR_Matches) == "+"]
reverseMatchess <- TIR_Matches[strand(TIR_Matches) == "-"]
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
TIR_Matches <- packSearch(subSeq, Genome, mismatch = 1)
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
TIR_Matches <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
potTransposons <- TIR_Matches[strand(TIR_Matches) == "+"]
reverseMatchess <- TIR_Matches[strand(TIR_Matches) == "-"]
follow(potTransposons, reverseMatchess)
precede(potTransposons, reverseMatchess)
distanceToNearest(potTransposons, reverseMatchess)
distanceToNearest(potTransposons[1], reverseMatchess)
distanceToNearest(potTransposons, reverseMatchess, ignore.strand = TRUE)
precede(potTransposons, reverseMatchess, ignore.strand = TRUE)
precede(potTransposons[1], reverseMatchess, ignore.strand = TRUE)
precede(potTransposons[5], reverseMatchess, ignore.strand = TRUE)
Genome
Genome@elementMetadata
Genome@elementType
Genome@metadata
View(Genome)
TIR_Matches
TIR_Matches@ranges
TIR_Matches
TIR_Matches[1]
TIR_Matches[1]@seqnames
TIR_Matches[1]@seqnames[[1]]
TIR_Matches[1]@seqnames[1]
print(TIR_Matches[1]@seqnames)
Genome$TIR_Matches[1@seqnames]
Genome$TIR_Matches[1]@seqnames
TIR_Matches[1]@seqnames
x = TIR_Matches[1]@seqnames
Genome$x
x
as.character(x)
Genome$as.character(TIR_Matches[1]@seqnames)
x = as.character(TIR_Matches[1]@seqnames)
Genome$x
x
Genome$x
Genome$x
x = TIR_Matches[1]@seqnames
x
x = as.character(x)
x
Genome$x
Genome$"NC_003070.9 Arabidopsis thaliana chromosome 1 sequence"
Genome$(x)
TIR_Matches
TIR_Matches[1]
seqnames(TIR_Matches[1])
seqnames(TIR_Matches[1]) == "NC_003070.9 Arabidopsis thaliana chromosome 1 sequence"
if(seqnames(TIR_Matches[1]) == "NC_003070.9 Arabidopsis thaliana chromosome 1 sequence") {print("yay")}
x = seqnames(TIR_Matches[1]) == "NC_003070.9 Arabidopsis thaliana chromosome 1 sequence"
x[1]
x[2]
x[[1]]
x
inverse.rle(x)
x@values
seqnames(TIR_Matches[1]) == "NC_003070.9 Arabidopsis thaliana chromosome 1 sequence"
if(seqnames(TIR_Matches[1]) == "NC_003070.9 Arabidopsis thaliana chromosome 1 sequence") {print("yay")}
if(seqnames(TIR_Matches[1])@value == "NC_003070.9 Arabidopsis thaliana chromosome 1 sequence") {print("yay")}
if(seqnames(TIR_Matches[1])@values == "NC_003070.9 Arabidopsis thaliana chromosome 1 sequence") {print("yay")}
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
TIR_Matches <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
if(initialise == TRUE) {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
initialise <- FALSE
source("R/packSearch.R")
start = Sys.time()
TIR_Matches <- packSearch(subSeq, Genome, mismatch = 1)
end = Sys.time()
print(end-start)
TIR_Matches
TIR_Matches[1]
flank(TIR_Matches[1], 1)
flank(TIR_Matches[1], 1:3)
flank(TIR_Matches[1], 3)
