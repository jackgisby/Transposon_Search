strand = strand)
if(!is.null(matchData)) {
TIR_Matches <- rbind(TIR_Matches, as.data.frame(matchData))
}
}
return(TIR_Matches)
}
identifyPotentialPackElements <- function(forwardMatches, reverseMatches, subSeq, Genome, mismatch, element.length, TSD.length) {
potTransposons <- as.data.frame(GRanges())
for(forwardMatch in 1:length(forwardMatches[,1])) {
forwardRepeat <- forwardMatches[forwardMatch,]
chr <- as.character(forwardRepeat[[1]])
searchRange <- forwardRepeat$start
searchRange <- c(searchRange + element.length[1], searchRange + element.length[2])
if(searchRange[2] > length(Genome[Genome@ranges@NAMES == chr][[1]])) {
searchRange[2] <- length(Genome[Genome@ranges@NAMES == chr][[1]])
}
reverseRepeats <- reverseMatches[reverseMatches$seqnames == forwardRepeat$seqnames
& reverseMatches$end > searchRange[1]
& reverseMatches$end < searchRange[2]
& reverseMatches$strand == "-",]
if(length(reverseRepeats[,1]) > 0) {
fTSD <- (forwardRepeat$start - TSD.length):(forwardRepeat$start - 1) #todo: will cause a bug if flank is out of bounds
for(reverseMatch in 1:length(reverseRepeats[,1])) {
rTSD <- (reverseRepeats[reverseMatch,]$end + 1):(reverseRepeats[reverseMatch,]$end + TSD.length) #todo: will cause a bug if flank is out of bounds
if(Genome[Genome@ranges@NAMES == chr][[1]][fTSD] == Genome[Genome@ranges@NAMES == chr][[1]][rTSD]) {
potTransposons <- rbind(potTransposons, data.frame(seqnames = forwardRepeat$seqnames,
start = forwardRepeat$start,
end = reverseRepeats[reverseMatch,]$end,
width = reverseRepeats[reverseMatch,]$end - forwardRepeat$start,
strand = "*"))
}
}
}
}
return(potTransposons)
}
start <- Sys.time()
potentialPacks <- identifyPotentialPackElements(forwardMatches, reverseMatches, subSeq, Genome, 1, c(300, 5000), 3)
end <- Sys.time()
end-start
potentialPacks
View(potentialPacks)
x <- read.csv("/Input/knownCACTA.csv")
x <- read.csv("Input/knownCACTA.csv")
x
x <- read.csv("Input/knownCACTA.csv", sep = ";")
x
x
which(x$start == 5)
5 / 100
1- (5/100)
algorithmAssessment(potentialPacks)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
score <- 0
for(element in 1:length(knownCACTA)) {
i = which(transposonList$start == knownCACTA$start[element])
if(i != 0 & transposonList$end[i] == knownCACTA$end[element]) {
score <- score + 1
}
}
print("Correct packCACTA identified in Arabidopsis thalania: ", score)
print("Algorithm error rate: ", (1-(score/length(transposonList[,1]))))
}
algorithmAssessment(potentialPacks)
integer(0)
length(integer(0))
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
score <- 0
for(element in 1:length(knownCACTA)) {
i = which(transposonList$start == knownCACTA$start[element])
if(length(i) == 0) {
i <- 0
} else if (transposonList$end[i] == knownCACTA$end[element]) {
score <- score + 1
}
}
print("Correct packCACTA identified in Arabidopsis thalania: ", score)
print("Algorithm error rate: ", (1-(score/length(transposonList[,1]))))
}
algorithmAssessment(potentialPacks)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
score <- 0
for(element in 1:length(knownCACTA)) {
i = which(transposonList$start == knownCACTA$start[element])
if(length(i) == 0) {
i <- 0
} else if (transposonList$end[i] == knownCACTA$end[element]) {
score <- score + 1
}
}
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", score))
print(paste0("Algorithm error rate: ", (1-(score/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
View(potentialPacks)
algorithmAssessment(potentialPacks)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
score <- 0
print(knownCACTA)
for(element in 1:length(knownCACTA)) {
i = which(transposonList$start == knownCACTA$start[element])
if(length(i) == 0) {
i <- 0
} else if (transposonList$end[i] == knownCACTA$end[element]) {
score <- score + 1
}
}
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", score))
print(paste0("Algorithm error rate: ", (1-(score/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
score <- 0
for(element in 1:length(knownCACTA)) {
i = which(transposonList$start == knownCACTA$start[element])
if(length(i) == 0) {
i <- 0
} else if (transposonList$end[i] == knownCACTA$end[element]) {
score <- score + 1
}
}
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", score))
print(paste0("Algorithm error rate: ", (1-(score/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
score <- 0
for(element in 1:length(knownCACTA)) {
i = which(transposonList$start == knownCACTA$start[element])
if(length(i) == 0) {
i <- 0
} else if (transposonList$end[i] == knownCACTA$end[element]) {
score <- score + 1
}
}
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", score))
print(paste0("Algorithm error rate: ", (1-(score/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
score <- 0
for(element in 1:length(knownCACTA)) {
i = which(transposonList$start == knownCACTA$start[element])
if(length(i) == 0) {
i <- 0
} else if (transposonList$end[i] == knownCACTA$end[element]) {
score <- score + 1
}
}
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", score))
print(paste0("Algorithm error rate: ", (1-(score/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
score <- 0
for(element in 1:length(knownCACTA)) {
i = which(transposonList$start == knownCACTA$start[element])
if(length(i) == 0) {
i <- 0
} else { #if (transposonList$end[i] == knownCACTA$end[element]) {
score <- score + 1
}
}
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", score))
print(paste0("Algorithm error rate: ", (1-(score/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
score <- 0
for(element in 1:length(knownCACTA)) {
i = which(transposonList$start == knownCACTA$start[element])
if(length(i) == 0) {
i <- 0
} else { #if (transposonList$end[i] == knownCACTA$end[element]) {
score <- score + 1
}
}
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", score))
print(paste0("Algorithm error rate: ", (1-(score/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
score <- 0
for(element in 1:length(knownCACTA)) {
i = which(transposonList$start == knownCACTA$start[element])
if(length(i) == 0) {
i <- 0
} else { #if (transposonList$end[i] == knownCACTA$end[element]) {
score <- score + 1
}
}
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", score))
print(paste0("Algorithm error rate: ", (1-(score/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA$length
knownCACTA$length %in% potentialPacks$width
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
score <- 0
for(element in 1:length(knownCACTA)) {
i = which(transposonList$start == knownCACTA$start[element])
if(length(i) == 0) {
i <- 0
} else { #if (transposonList$end[i] == knownCACTA$end[element]) {
score <- score + 1
}
}
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", score))
print(paste0("Algorithm error rate: ", (1-(score/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
knownCACTA$start %in% potentialPacks$start
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
score <- 0
knownCACTA$Identified <- knownCACTA$start %in% potentialPacks$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", score))
print(paste0("Algorithm error rate: ", (1-(score/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA$Identified <- knownCACTA$start %in% potentialPacks$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", count(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(score/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
knownCACTA$Identified <- knownCACTA$start %in% potentialPacks$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", count(knownCACTA$Identified)))
x <- knownCACTA$Identified
x
mean(x)
sum(x)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA$Identified <- knownCACTA$start %in% potentialPacks$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(score/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA$Identified <- knownCACTA$start %in% potentialPacks$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks)
knownCACTA$end %in% potentialPacks$start
knownCACTA$end %in% potentialPacks$end
knownCACTA
View(knownCACTA)
potentialPacks
x <- makeGRangesFromDataFrame(potentialPacks)
x
countOverlaps(x)
coverage(x)
reduce(x)
x <- reduce(x)
x <- as.data.frame(x)
algorithmAssessment <- function(transposonList) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA$Identified <- knownCACTA$start %in% potentialPacks$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
algorithmAssessment(x)
x
View(x)
max(x$width)
x <- knownCACTA$start
x
vector(1:10)
x <- makeGRangesFromDataFrame(knownCACTA)
x
Genome[x]
seqnames(Genome)
Genome@ranges@NAMES
x <- data.frame(number = 1:5, name = Genome@ranges@NAMES)
x
View(knownCACTA)
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$Chr[i] <- x$name[knownCACTA$Chr[i]]
}
knownCACTA$Identified <- knownCACTA$start %in% potentialPacks$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
algorithmAssessment(x)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$Chr[i] <- x$name[knownCACTA$Chr[i]]
}
knownCACTA
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$Chr[i] <- x$name[knownCACTA$Chr[i]]
}
knownCACTA
x
x$name
x$name[4]
x$name[[4]]
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$Chr[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$Chr[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA
knownCACTA <- knownCACTA[,1:8]
knownCACTA
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
mapvalues()
library(dplyr)
mapvalues()
library(dplyr)
dplyr
?dplyr
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% potentialPacks$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
algorithmAssessment(x, Genome)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
x
knownCACTA
nownCACTA$start %in% potentialPacks$start
knownCACTA$start %in% potentialPacks$start
knownCACTA$start %in% potentialPacks$start
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% potentialPacks$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
algorithmAssessment(x, Genome)
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% transposonList$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks, Genome)
transposonList$start
knownCACTA$start %in% potentialPacks$start
knownCACTA$start
potentialPacks$start
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% transposonList$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks, Genome)
initialise()
initialise <- function() {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
subSeq <- DNAString("CACTACAA-AAA")
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
Genome <- Genome[1:5]
}
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% transposonList$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
initialise()
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 5000))
algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
initialise <- function() {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% transposonList$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAA")
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 5000))
algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
initialise <- function() {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% transposonList$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
#Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAA")
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 5000), TSD.length = 3)
algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
potentialPacks
View(potentialPacks)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- potentialPacks[potentialPacks$start == knownCACTA$start
| potentialPacks$end == knownCACTA$end
| potentialPacks$width == knownCACTA$length]
x <- potentialPacks[potentialPacks$start %in% knownCACTA$start
| potentialPacks$end %in% knownCACTA$end
| potentialPacks$width %in% knownCACTA$length]
potentialPacks$start %in% knownCACTA$start
x <- potentialPacks[potentialPacks$start %in% knownCACTA$start
| potentialPacks$end %in% knownCACTA$end
| potentialPacks$width %in% knownCACTA$length]
x
x <- potentialPacks[potentialPacks$start %in% knownCACTA$start
| potentialPacks$end %in% knownCACTA$end
| potentialPacks$width %in% knownCACTA$length,]
x
View(x)
View(knownCACTA)
x <- potentialPacks[potentialPacks$start %in% knownCACTA$start
| potentialPacks$end %in% knownCACTA$end,]
View(potentialPacks)
sum(packCACTA$length %in% potentialPacks$width)
sum(knownCACTA$length %in% potentialPacks$width)
sum(knownCACTA$start %in% potentialPacks$start)
knownCAC
knownCACTA
