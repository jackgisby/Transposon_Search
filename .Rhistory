source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 5000))
algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
initialise <- function() {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% transposonList$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAA")
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 5000))
algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
initialise <- function() {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% transposonList$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
#Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAA")
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 5000), TSD.length = 3)
algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
potentialPacks
View(potentialPacks)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- potentialPacks[potentialPacks$start == knownCACTA$start
| potentialPacks$end == knownCACTA$end
| potentialPacks$width == knownCACTA$length]
x <- potentialPacks[potentialPacks$start %in% knownCACTA$start
| potentialPacks$end %in% knownCACTA$end
| potentialPacks$width %in% knownCACTA$length]
potentialPacks$start %in% knownCACTA$start
x <- potentialPacks[potentialPacks$start %in% knownCACTA$start
| potentialPacks$end %in% knownCACTA$end
| potentialPacks$width %in% knownCACTA$length]
x
x <- potentialPacks[potentialPacks$start %in% knownCACTA$start
| potentialPacks$end %in% knownCACTA$end
| potentialPacks$width %in% knownCACTA$length,]
x
View(x)
View(knownCACTA)
x <- potentialPacks[potentialPacks$start %in% knownCACTA$start
| potentialPacks$end %in% knownCACTA$end,]
View(potentialPacks)
sum(packCACTA$length %in% potentialPacks$width)
sum(knownCACTA$length %in% potentialPacks$width)
sum(knownCACTA$start %in% potentialPacks$start)
knownCAC
knownCACTA
initialise <- function() {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% transposonList$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAA")
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 5000), TSD.length = 3)
algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
initialise <- function() {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% transposonList$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAATAT")
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 5000), TSD.length = 3)
algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
library(Biostrings)
library(biomartr)
install.packages("biomartr", dependencies = TRUE)
library(GenomicRanges)
library(dplyr)
initialise <- function() {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% transposonList$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAA") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 5000), TSD.length = 3)
initialise <- function() {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% transposonList$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
#Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAA") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
initialise <- function() {
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
for(i in 1:length(knownCACTA$Chr)) {
knownCACTA$chrName[i] <- as.character(x$name[knownCACTA$Chr[i]])
}
knownCACTA$Identified <- knownCACTA$start %in% transposonList$start
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
#Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAATAT") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
View(potentialPacks)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")
knownCACTA <- knownCACTA[,1:8]
View(Genome)
View(knownCACTA)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8]
x <- data.frame(name = Genome@ranges@NAMES)
x
algorithmAssessment <- function(transposonList, Genome) {
chrNames <- data.frame(name = Genome@ranges@NAMES)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8] %>%
mutate(
identified = start %in% transposonList$start
)
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$Identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$Identified)/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks, Genome)
algorithmAssessment <- function(transposonList, Genome) {
chrNames <- data.frame(name = Genome@ranges@NAMES)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8] %>%
mutate(
identified = start %in% transposonList$start
)
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$identified)/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks, Genome)
algorithmAssessment <- function(transposonList, Genome) {
chrNames <- data.frame(name = Genome@ranges@NAMES)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8] %>%
mutate(
identified = start %in% transposonList$start
)
identifiedCACTA <- filter(transposonList,
transposonList$start %in% knownCACTA$start &
transposonList$end %in% knownCACTA$end)
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", sum(knownCACTA$identified)))
print(paste0("Algorithm error rate: ", (1-(sum(knownCACTA$identified)/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks, Genome)
algorithmAssessment <- function(transposonList, Genome) {
chrNames <- data.frame(name = Genome@ranges@NAMES)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8] %>%
mutate(
identified = start %in% transposonList$start
)
identifiedCACTA <- filter(transposonList,
transposonList$start %in% knownCACTA$start &
transposonList$end %in% knownCACTA$end)
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", length(identifiedCACTA[,1]))))
print(paste0("Algorithm error rate: ", (1-(length(identifiedCACTA[,1])/length(transposonList[,1])))))
}
algorithmAssessment <- function(transposonList, Genome) {
chrNames <- data.frame(name = Genome@ranges@NAMES)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8] %>%
mutate(
identified = start %in% transposonList$start
)
identifiedCACTA <- filter(transposonList,
transposonList$start %in% knownCACTA$start &
transposonList$end %in% knownCACTA$end)
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", length(identifiedCACTA[,1])))
print(paste0("Algorithm error rate: ", (1-(length(identifiedCACTA[,1])/length(transposonList[,1])))))
}
algorithmAssessment(potentialPacks, Genome)
#Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAATAT") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
#Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAATAT") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
identifiedCACTA <- algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
initialise <- function() {
"
loads the ArAth genome and required packages for testing
"
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
chrNames <- data.frame(name = Genome@ranges@NAMES)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8]
identifiedCACTA <- filter(transposonList,
transposonList$start %in% knownCACTA$start &
transposonList$end %in% knownCACTA$end)
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", length(identifiedCACTA[,1])))
print(paste0("Algorithm error rate: ", (1-(length(identifiedCACTA[,1])/length(transposonList[,1])))))
return(identifiedCACTA)
}
chrNames <- data.frame(name = Genome@ranges@NAMES)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8]
identifiedCACTA <- filter(transposonList,
transposonList$start %in% knownCACTA$start &
transposonList$end %in% knownCACTA$end)
transposonList <- potentialPacks
identifiedCACTA <- filter(transposonList,
transposonList$start %in% knownCACTA$start &
transposonList$end %in% knownCACTA$end)
View(identifiedCACTA)
#Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAATAT") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
identifiedCACTA <- algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
initialise <- function() {
"
loads the ArAth genome and required packages for testing
"
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
chrNames <- data.frame(name = Genome@ranges@NAMES)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8] %>% mutate(
identified <- start %in% transposonList$start & end %in% transposonList$end
)
identifiedCACTA <- filter(transposonList,
transposonList$start %in% knownCACTA$start &
transposonList$end %in% knownCACTA$end)
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", length(identifiedCACTA[,1])))
print(paste0("Algorithm error rate: ", (1-(length(identifiedCACTA[,1])/length(transposonList[,1])))))
return(identifiedCACTA)
}
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8] %>% mutate(
identified <- start %in% transposonList$start & end %in% transposonList$end
)
knownCACTA
View(knownCACTA)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8] %>% mutate(
identified = (start %in% transposonList$start & end %in% transposonList$end)
)
searchRange <- forwardRepeat$start
forwardRepeat$start <- 1
searchRange <- 1 %>%
c( + element.length[1],  + element.length[2])
element.length <- c(300, 3000)
searchRange <- 1 %>%
c( + element.length[1],  + element.length[2])
searchRange
element.length <- c(300, 3000)
searchRange <- 1 %>%
c(. + element.length[1], . + element.length[2])
searchRange
forwardMatches <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
source("R/packSearch.R")
forwardMatches <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
identifiedCACTA <- algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
View(potentialPacks)
#Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAATAT") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
identifiedCACTA <- algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
initialise <- function() {
"
loads the ArAth genome and required packages for testing
"
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
chrNames <- data.frame(name = Genome@ranges@NAMES)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8] %>% mutate(
identified = (start %in% transposonList$start & end %in% transposonList$end)
)
identifiedCACTA <- filter(transposonList,
transposonList$start %in% knownCACTA$start &
transposonList$end %in% knownCACTA$end) #does not consider chromosome
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", length(identifiedCACTA[,1])))
print(paste0("Algorithm error rate: ", (1-(length(identifiedCACTA[,1])/length(transposonList[,1])))))
return(identifiedCACTA)
}
identifiedCACTA <- algorithmAssessment(potentialPacks, Genome)
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
identifiedCACTA <- algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
forwardMatches
head(forwardMatches)
#Genome <- initialise()
subSeq <- DNAString("CACTACAA-AAATAT") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
identifiedCACTA <- algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
initialise <- function() {
"
loads the ArAth genome and required packages for testing
"
library(Biostrings)
library(biomartr)
library(GenomicRanges)
library(dplyr)
Genome <- read_genome(getGenome(db = "refseq", "Arabidopsis thaliana", path = "/Input"))
return(Genome[1:5])
}
algorithmAssessment <- function(transposonList, Genome) {
chrNames <- data.frame(name = Genome@ranges@NAMES)
knownCACTA <- read.csv("Input/knownCACTA.csv", sep = ";")[,1:8] %>% mutate(
identified = (start %in% transposonList$start & end %in% transposonList$end)
)
identifiedCACTA <- filter(transposonList,
transposonList$start %in% knownCACTA$start &
transposonList$end %in% knownCACTA$end) #does not consider chromosome
print(paste0("Correct packCACTA identified in Arabidopsis thalania: ", length(identifiedCACTA[,1])))
print(paste0("Algorithm error rate: ", (1-(length(identifiedCACTA[,1])/length(transposonList[,1])))))
return(identifiedCACTA)
}
subSeq <- DNAString("CACTACAA-AAATAT") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
identifiedCACTA <- algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
subSeq <- DNAString("CACTACAA-AAATAT") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
potentialPacks <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
identifiedCACTA <- algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
forwardMatches <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
source("R/packSearch.R")
forwardMatches <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
forwardMatches
subSeq <- DNAString("CACTACAA-AAATAT") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
forwardMatches <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
identifiedCACTA <- algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
forwardMatches
View(forwardMatches)
getTSDs(forwardMatches, Genome, 3, "+")
subSeq <- DNAString("CACTACAA-AAATAT") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
forwardMatches <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
identifiedCACTA <- algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
subSeq <- DNAString("CACTACAA-AAATAT") #CACTACAA-AAATAT
source("R/packSearch.R")
start = Sys.time()
forwardMatches <- packSearch(subSeq, Genome, mismatch = 2, element.length = c(300, 3000), TSD.length = 3)
identifiedCACTA <- algorithmAssessment(potentialPacks, Genome)
end = Sys.time()
print(end-start)
TSD = Genome[Genome@ranges@NAMES == seqnames][[1]][(start - TSD.length):(start - 1)])
forwardMatches %>% mutate(
TSD = Genome[Genome@ranges@NAMES == seqnames][[1]][(start - TSD.length):(start - 1)])
)
