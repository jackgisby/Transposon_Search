plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize()
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
#delete
dist1 <- ape::dist.dna(ape::as.DNAbin(TIRs), model = "K80")
phy1 <- ape::nj(dist1)
#delete
dist1 <- ape::dist.dna(ape::as.DNAbin(TIRs), model = "K80")
phy1 <- ape::njs(dist1)
phy1 <- ape::ladderize(phy1)
dnd1 <- as.dendrogram(phy1)
#clustering
getClusters("Data/Output/algorithmAssessment/potentialPacks.csv")
source("packages.R")
potentialPacks <- read.csv("Data/Output/algorithmAssessment/potentialPacks.csv") %>%
filter(stringID == 7) %>%
mutate(forward_TIR = as.character(forward_TIR)) %>%
mutate(reverse_TIR = as.character(reverse_TIR))
TIRs <- DNAStringSet(c(potentialPacks$forward_TIR, potentialPacks$reverse_TIR))
TIRs@ranges@NAMES <- c(paste0("f",row.names(potentialPacks)), paste0("r",row.names(potentialPacks)))
#delete
dist1 <- ape::dist.dna(ape::as.DNAbin(TIRs), model = "K80")
phy1 <- ape::njs(dist1)
phy1 <- ape::ladderize(phy1)
dnd1 <- as.dendrogram(phy1)
phy1
plot(phy1)
View(phy1)
IdClusters(DistanceMatrix(TIRs), showPlot = TRUE, cutoff = 0.4)
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
## compute pairwise distance matrices
dist1 <- ape::dist.dna(woodmouse, model = "K80")
data(woodmouse, package = "ape")
## compute pairwise distance matrices
dist1 <- ape::dist.dna(woodmouse, model = "K80")
dist2 <- kdistance(woodmouse, k = 7)
## build neighbor-joining trees
phy1 <- ape::nj(dist1)
phy2 <- ape::nj(dist2)
## rearrange trees in ladderized fashion
phy1 <- ape::ladderize(phy1)
phy2 <- ape::ladderize(phy2)
## convert phylo objects to dendrograms
dnd1 <- as.dendrogram(phy1)
dnd2 <- as.dendrogram(phy2)
## plot the tanglegram
dndlist <- dendextend::dendlist(dnd1, dnd2)
dendextend::tanglegram(dndlist, fast = TRUE, margin_inner = 5)
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
source("packages.R")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
potentialPacks <- read.csv("Data/Output/algorithmAssessment/potentialPacks.csv") %>%
filter(stringID == 7) %>%
mutate(forward_TIR = as.character(forward_TIR)) %>%
mutate(reverse_TIR = as.character(reverse_TIR))
TIRs <- DNAStringSet(c(potentialPacks$forward_TIR, potentialPacks$reverse_TIR))
TIRs@ranges@NAMES <- c(paste0("f",row.names(potentialPacks)), paste0("r",row.names(potentialPacks)))
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
dnd1 <- ReadDendogram(phy1)
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize() %>%
ReadDendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
#delete
dist1 <- ape::dist.dna(ape::as.DNAbin(TIRs), model = "K80")
phy1 <- ape::njs(dist1)
phy1 <- ape::ladderize(phy1)
dnd1 <- ReadDendrogram(phy1)
dnd1 <- as.dendrogram(phy1)
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize() %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
View(Seqs2DB)
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize() %>%
chronos()
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize() %>%
ape::chronos()
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize() %>%
ape::chronos() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
x <- ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93", as.matrix = TRUE) %>%
ape::njs() %>%
ape::ladderize()
View(x)
x[["edge.length"]]
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::ladderize() %>%
ape::chronos() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "K80") %>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
#delete
dist1 <- ape::dist.dna(ape::as.DNAbin(TIRs), model = "TN93")
phy1 <- ape::njs(dist1)
phy1 <- ape::ladderize(phy1)
dnd1 <- as.dendrogram(phy1)
phy1 <- ape::njs(dist1)
phy1 <- ape::ladderize(phy1)
dnd1 <- as.dendrogram(phy1)
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "K80") %>%
ape::njs() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "K80") %>%
ape::njs() %>%
ape::chronos() %>%
#ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::chronos() %>%
#ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna() %>% #TN93
ape::njs() %>%
ape::chronos() %>%
#ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
x <- ape::as.DNAbin(TIRs) %>%
ape::dist.dna() %>% #TN93
ape::njs()
View(x)
x[["edge.length"]]
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "raw") %>% #TN93
ape::njs() %>%
ape::chronos() %>%
#ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "raw") %>% #TN93
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
plot(ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "raw") %>% #TN93
ape::njs() %>%
ape::ladderize())
x <- ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "raw") %>% #TN93
ape::njs() %>%
ape::ladderize()
View(x)
x[["edge.length"]]
rtree
ape::as.DNAbin(TIRs)
ape::dist.dna(model = "raw") %>% #TN93
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(TIRs,model = "raw") %>% #TN93
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::dist.dna(TIRs,model = "raw") %>% #TN93
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
#delete
dist1 <- ape::dist.dna(ape::as.DNAbin(TIRs), model = "TN93", as.matrix = TRUE)
phy1 <- ape::njs(dist1)
phy1 <- ape::ladderize(phy1)
dnd1 <- as.dendrogram(phy1)
#delete
dist1 <- ape::dist.dna(ape::as.DNAbin(TIRs), as.matrix = TRUE)
phy1 <- ape::ladderize(phy1)
phy1 <- ape::njs(dist1)
dnd1 <- as.dendrogram(phy1)
phy1 <- chronos(phy1)
phy1 <- ape::chronos(phy1)
#clustering
getClusters("Data/Output/algorithmAssessment/potentialPacks.csv")
potentialPacks <- read.csv("Data/Output/algorithmAssessment/potentialPacks.csv") %>%
filter(stringID == 7) %>%
mutate(forward_TIR = as.character(forward_TIR)) %>%
mutate(reverse_TIR = as.character(reverse_TIR))
TIRs <- DNAStringSet(c(potentialPacks$forward_TIR, potentialPacks$reverse_TIR))
TIRs@ranges@NAMES <- c(paste0("f",row.names(potentialPacks)), paste0("r",row.names(potentialPacks)))
TIRs <- DNAStringSet(c(potentialPacks$forward_TIR, potentialPacks$reverse_TIR))
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "raw") %>% #TN93
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
TIRs@ranges@NAMES <- c(paste0("f",row.names(potentialPacks)), paste0("r",row.names(potentialPacks)))
IdClusters(DistanceMatrix(TIRs), showPlot = TRUE, cutoff = 0.4)
DistanceMatrix(TIRs)%>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
DistanceMatrix(TIRs)%>%
ape::njs() %>%
ape::ladderize()
DistanceMatrix(TIRs)
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "raw") %>% #TN93
ape::nj() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::nj() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::ladderize() %>%
ape::as.phylo() %>%
as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::ladderize() %>%
ape::as.phylo()
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::ladderize() %>%
ape::as.dendrogram() %>%
dendextend::set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::ladderize() %>%
ape::as.dendrogram() %>%
set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::ladderize() %>%
hclust() %>%
as.dendrogram() %>%
set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::ladderize() %>%
#as.dendrogram() %>%
#set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
ape::as.DNAbin(TIRs) %>%
ape::dist.dna(model = "TN93") %>%
ape::njs() %>%
ape::ladderize() %>%
as.dendrogram() %>%
#set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
library(ape)
as.DNAbin(TIRs) %>%
dist.dna(model = "TN93") %>%
njs() %>%
ladderize() %>%
as.dendrogram() %>%
set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
#delete
dist1 <- ape::dist.dna(ape::as.DNAbin(TIRs), as.matrix = TRUE)
phy1 <- ape::njs(dist1)
phy1 <- ape::ladderize(phy1)
dnd1 <- as.dendrogram(phy1)
#delete
dist1 <- ape::dist.dna(ape::as.DNAbin(TIRs), as.matrix = TRUE)
phy1 <- ape::njs(dist1)
dnd1 <- as.dendrogram(phy1)
plot(dnd1)
View(TIRs)
TIRs
## compute pairwise distance matrices
dist1 <- ape::dist.dna(as.DNAbin(TIRs), model = "K80")
## build neighbor-joining trees
phy1 <- ape::nj(dist1)
## rearrange trees in ladderized fashion
phy1 <- ape::ladderize(phy1)
## convert phylo objects to dendrograms
dnd1 <- as.dendrogram(phy1)
## compute pairwise distance matrices
dist1 <- ape::dist.dna(as.DNAbin(TIRs), model = "K80")
## build neighbor-joining trees
phy1 <- ape::njs(dist1)
## rearrange trees in ladderized fashion
phy1 <- ape::ladderize(phy1)
## convert phylo objects to dendrograms
dnd1 <- as.dendrogram(phy1)
View(phy1)
?dist.dna()
## compute pairwise distance matrices
dist1 <- ape::dist.dna(as.DNAbin(TIRs), model = "TN93")
## build neighbor-joining trees
phy1 <- ape::njs(dist1)
## rearrange trees in ladderized fashion
phy1 <- ape::ladderize(phy1)
## convert phylo objects to dendrograms
dnd1 <- as.dendrogram(phy1)
## compute pairwise distance matrices
dist1 <- ape::dist.dna(as.DNAbin(TIRs), model = "TN93")
## build neighbor-joining trees
phy1 <- ape::nj(dist1)
## rearrange trees in ladderized fashion
phy1 <- ape::ladderize(phy1)
## convert phylo objects to dendrograms
dnd1 <- as.dendrogram(phy1)
## compute pairwise distance matrices
dist1 <- ape::dist.dna(as.DNAbin(TIRs), model = "TN93")
## build neighbor-joining trees
phy1 <- ape::njs(dist1)
## rearrange trees in ladderized fashion
phy1 <- ape::ladderize(phy1)
## convert phylo objects to dendrograms
dnd1 <- as.dendrogram(phy1)
View(phy1)
phy1[["edge.length"]]
## compute pairwise distance matrices
dist1 <- ape::dist.dna(as.DNAbin(TIRs), model = "raw")
## build neighbor-joining trees
phy1 <- ape::njs(dist1)
## rearrange trees in ladderized fashion
phy1 <- ape::ladderize(phy1)
## convert phylo objects to dendrograms
dnd1 <- as.dendrogram(phy1)
## compute pairwise distance matrices
dist1 <- ape::dist.dna(as.DNAbin(TIRs), model = "raw")
## build neighbor-joining trees
phy1 <- ape::nj(dist1)
## rearrange trees in ladderized fashion
phy1 <- ape::ladderize(phy1)
## convert phylo objects to dendrograms
dnd1 <- as.dendrogram(phy1)
## compute pairwise distance matrices
dist1 <- ape::dist.dna(as.DNAbin(TIRs), model = "JC69")
## build neighbor-joining trees
phy1 <- ape::nj(dist1)
## rearrange trees in ladderized fashion
phy1 <- ape::ladderize(phy1)
## convert phylo objects to dendrograms
dnd1 <- as.dendrogram(phy1)
kdistance(TIRs, k = 7)
kmer::kdistance(TIRs, k = 7)
library(kmer)
as.DNAbin(TIRs) %>%
dist.dna(model = "TN93") %>%
njs() %>%
ladderize() %>%
as.dendrogram() %>%
set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
kdistance(TIRs, k = 7)
TIRs <- c(potentialPacks$forward_TIR, potentialPacks$reverse_TIR)
as.DNAbin(TIRs) %>%
dist.dna(model = "TN93") %>%
njs() %>%
ladderize() %>%
as.dendrogram() %>%
set("labels_col", rep(length(potentialPacks[,1]), 2)) %>%
plot(main = "TIR Relationships")
kdistance(TIRs, k = 7)
kdistance(as.DNAbin(TIRs), k = 5)
d1 <- c(1:5) # some data
d2 <- dist(d1)
d3 <- hclust(d2, method = "average")
dend <- as.dendrogram(d3)
View(dend)
View(d2)
d2
View(d3)
plot(d3)
